{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/autocomplete\";\nimport * as i6 from \"@angular/material/core\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"./chart/chart.component\";\nfunction AppComponent_mat_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" | \");\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const result_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", result_r7.code);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(result_r7.code);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(result_r7.name);\n  }\n}\nfunction AppComponent_mat_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" | \");\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const result_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", result_r8.code);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(result_r8.code);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(result_r8.name);\n  }\n}\nfunction AppComponent_mat_option_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 11)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" | \");\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const result_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", result_r9.symbol);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(result_r9.symbol);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(result_r9.name);\n  }\n}\nfunction AppComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-chart\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"data\", ctx_r6.chartData);\n  }\n}\nexport class AppComponent {\n  constructor(http) {\n    this.http = http;\n    this.title = 'Homework4';\n    this.starter_url = 'https://www.alphavantage.co/query?function=';\n    this.stock_search_url = 'SYMBOL_SEARCH&keywords=';\n    this.currency_exchange_url = 'CURRENCY_EXCHANGE_RATE&from_currency=';\n    this.stock_symbol = '';\n    this.url = '';\n    this.api_key = 'XGN36Q0ICTGL1ZWD';\n    this.show_chart = false;\n    this.chartData = [];\n    this.searchable = '';\n    this.stock_search_results = [];\n    this.currency_list = [];\n    this.from_currency = '';\n    this.to_currency = '';\n  } // used to access the service methods\n  generate_stock_chart() {\n    // console.log(\"generateStockUrl() called\");\n    this.url = this.starter_url + 'TIME_SERIES_INTRADAY&symbol=' + this.stock_symbol + '&interval=5min&apikey=' + this.api_key;\n    //  console.log(\"URL\", this.url)\n    this.http.get(this.url).subscribe(data => {\n      this.chartData = data;\n      console.log(\"CHART DATA: \", this.chartData);\n      this.show_chart = true;\n    });\n  }\n  symbol_search(event) {\n    let input = event.target.value;\n    let final_search_url = this.starter_url + this.stock_search_url + input + '&apikey=' + this.api_key;\n    console.log(\"url: \", final_search_url);\n    console.log(\"input: \", input);\n    this.http.get(final_search_url).subscribe(data => {\n      this.stock_search_results = data.bestMatches.map(match => {\n        return {\n          symbol: match['1. symbol'],\n          name: match['2. name']\n        };\n      });\n    });\n    console.log(this.stock_search_results);\n  }\n  ngOnInit() {\n    this.http.get('assets/csv/digital_currency_list.csv', {\n      responseType: 'text'\n    }).subscribe(data => {\n      const rows = data.split('\\n');\n      rows.shift();\n      this.currency_list = rows.map(row => {\n        const cols = row.split(',');\n        return {\n          code: cols[0],\n          name: cols[1]\n        };\n      });\n    });\n    this.http.get('assets/csv/physical_currency_list.csv', {\n      responseType: 'text'\n    }).subscribe(data => {\n      const rows = data.split('\\n');\n      rows.shift();\n      rows.map(row => {\n        const cols = row.split(',');\n        this.currency_list.push({\n          code: cols[0],\n          name: cols[1]\n        });\n      });\n    });\n    console.log(\"currency list\", this.currency_list);\n  }\n  generate_currency_chart() {}\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 33,\n  vars: 12,\n  consts: [[1, \"example-full-width\"], [\"matInput\", \"\", \"placeholder\", \"From currency\", 3, \"ngModel\", \"matAutocomplete\", \"ngModelChange\"], [\"auto1\", \"matAutocomplete\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [2, \"margin\", \"5px\"], [\"matInput\", \"\", \"placeholder\", \"To currency\", 3, \"ngModel\", \"matAutocomplete\", \"ngModelChange\"], [\"auto2\", \"matAutocomplete\"], [3, \"routerLink\", \"click\"], [\"matInput\", \"\", \"placeholder\", \"Stock symbol\", 3, \"ngModel\", \"matAutocomplete\", \"ngModelChange\", \"input\"], [\"auto\", \"matAutocomplete\"], [4, \"ngIf\"], [3, \"value\"], [3, \"data\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Pick which commodity you want to view\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"Commodities\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"h2\");\n      i0.ɵɵtext(5, \"Technical indicators\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"nav\")(7, \"h2\");\n      i0.ɵɵtext(8, \"Currency exchange\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"mat-form-field\", 0)(10, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.from_currency = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"mat-autocomplete\", null, 2);\n      i0.ɵɵtemplate(13, AppComponent_mat_option_13_Template, 6, 3, \"mat-option\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(14, \"div\", 4);\n      i0.ɵɵelementStart(15, \"mat-form-field\", 0)(16, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.to_currency = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"mat-autocomplete\", null, 6);\n      i0.ɵɵtemplate(19, AppComponent_mat_option_19_Template, 6, 3, \"mat-option\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_20_listener() {\n        return ctx.generate_currency_chart();\n      });\n      i0.ɵɵtext(21, \"View\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"h2\");\n      i0.ɵɵtext(23, \"Stock symbol\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"mat-form-field\", 0)(25, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_25_listener($event) {\n        return ctx.stock_symbol = $event;\n      })(\"input\", function AppComponent_Template_input_input_25_listener($event) {\n        return ctx.symbol_search($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"mat-autocomplete\", null, 9);\n      i0.ɵɵtemplate(28, AppComponent_mat_option_28_Template, 6, 3, \"mat-option\", 3);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_29_listener() {\n        return ctx.generate_stock_chart();\n      });\n      i0.ɵɵtext(30, \"View\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(31, AppComponent_div_31_Template, 2, 1, \"div\", 10);\n      i0.ɵɵelement(32, \"router-outlet\");\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(12);\n      const _r2 = i0.ɵɵreference(18);\n      const _r4 = i0.ɵɵreference(27);\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"ngModel\", ctx.from_currency)(\"matAutocomplete\", _r0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.currency_list);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.to_currency)(\"matAutocomplete\", _r2);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.currency_list);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", \"/data/\" + ctx.stock_symbol);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.stock_symbol)(\"matAutocomplete\", _r4);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.stock_search_results);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"routerLink\", \"/data/\" + ctx.stock_symbol);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.show_chart);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterOutlet, i3.RouterLink, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i5.MatAutocomplete, i6.MatOption, i5.MatAutocompleteTrigger, i7.MatFormField, i8.MatInput, i9.ChartComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AppComponent","constructor","http","generate_stock_chart","url","starter_url","stock_symbol","api_key","get","subscribe","data","chartData","console","log","show_chart","symbol_search","event","input","target","value","final_search_url","stock_search_url","stock_search_results","bestMatches","map","match","symbol","name","ngOnInit","responseType","rows","split","shift","currency_list","row","cols","code","push","generate_currency_chart","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Programming\\FrontEnd_421\\Homework4\\src\\app\\app.component.html","C:\\Programming\\FrontEnd_421\\Homework4\\src\\app\\app.component.ts"],"sourcesContent":["<h1>Pick which commodity you want to view</h1>\n\n\n<h2>Commodities</h2>\n<h2>Technical indicators</h2>\n\n<nav>\n\n  <h2>Currency exchange</h2>\n\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"From currency\" [(ngModel)]=\"from_currency\" [matAutocomplete]=\"auto1\">\n    <mat-autocomplete #auto1=\"matAutocomplete\">\n      <mat-option *ngFor=\"let result of currency_list\" [value]=\"result.code\">\n        <span>{{ result.code}}</span> |   <span>{{ result.name}}</span>\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n  <div style=\"margin: 5px;\"></div>\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"To currency\" [(ngModel)]=\"to_currency\" [matAutocomplete]=\"auto2\">\n    <mat-autocomplete #auto2=\"matAutocomplete\">\n      <mat-option *ngFor=\"let result of currency_list\" [value]=\"result.code\">\n        <span>{{ result.code}}</span> |   <span>{{ result.name}}</span>\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n\n  <button (click)=\"generate_currency_chart()\" [routerLink]=\"'/data/' + stock_symbol\">View</button>\n\n  <h2>Stock symbol</h2>\n\n  <mat-form-field class=\"example-full-width\">\n    <input matInput placeholder=\"Stock symbol\" [(ngModel)]=\"stock_symbol\" [matAutocomplete]=\"auto\" (input)=\"symbol_search($event)\">\n    <mat-autocomplete #auto=\"matAutocomplete\" >\n      <mat-option *ngFor=\"let result of stock_search_results\" [value]=\"result.symbol\">\n        <span>{{ result.symbol}}</span> |   <span>{{ result.name}}</span>\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n\n  <button (click)=\"generate_stock_chart()\" [routerLink]=\"'/data/' + stock_symbol\">View</button>\n\n</nav>\n\n<div *ngIf=\"show_chart\">\n  <app-chart [data]=\"chartData\"></app-chart>\n</div>\n\n<router-outlet></router-outlet>\n","import {Component, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit{\n  title = 'Homework4';\n  starter_url = 'https://www.alphavantage.co/query?function=';\n  stock_search_url = 'SYMBOL_SEARCH&keywords=';\n  currency_exchange_url = 'CURRENCY_EXCHANGE_RATE&from_currency='\n  stock_symbol = '';\n  url = '';\n  api_key = 'XGN36Q0ICTGL1ZWD';\n  show_chart = false;\n  chartData: Object = [];\n  searchable = ''\n  stock_search_results: any[] = [];\n  currency_list: any[] = [];\n  from_currency = ''\n  to_currency = ''\n\n  constructor(private http: HttpClient) { } // used to access the service methods\n\n  generate_stock_chart(){\n   // console.log(\"generateStockUrl() called\");\n    this.url = this.starter_url + 'TIME_SERIES_INTRADAY&symbol=' + this.stock_symbol + '&interval=5min&apikey=' + this.api_key;\n  //  console.log(\"URL\", this.url)\n\n    this.http.get(this.url).subscribe((data) => {\n      this.chartData = data;\n      console.log(\"CHART DATA: \", this.chartData);\n      this.show_chart = true;\n\n  });\n}\n\n  symbol_search(event: any) {\n    let input = event.target.value;\n    let final_search_url = this.starter_url + this.stock_search_url + input + '&apikey=' + this.api_key;\n    console.log(\"url: \", final_search_url);\n    console.log(\"input: \", input);\n    this.http.get(final_search_url).subscribe((data: any) => {\n      this.stock_search_results = data.bestMatches.map((match: any) => {\n        return {\n          symbol: match['1. symbol'],\n          name: match['2. name']\n        };\n      });\n    });\n    console.log(this.stock_search_results)\n  }\n\n  ngOnInit(){\n    this.http.get('assets/csv/digital_currency_list.csv', {responseType: 'text'}).subscribe(data => {\n      const rows = data.split('\\n');\n      rows.shift()\n      this.currency_list = rows.map((row : any) => {\n        const cols = row.split(',');\n        return {\n          code: cols[0],\n          name: cols[1]\n        }\n      })\n    })\n\n    this.http.get('assets/csv/physical_currency_list.csv', {responseType: 'text'}).subscribe(data => {\n      const rows = data.split('\\n');\n      rows.shift()\n      rows.map((row : any) => {\n        const cols = row.split(',');\n        this.currency_list.push({code: cols[0], name: cols[1]})\n      })\n    })\n    console.log(\"currency list\", this.currency_list)\n  }\n\n  generate_currency_chart() {\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}